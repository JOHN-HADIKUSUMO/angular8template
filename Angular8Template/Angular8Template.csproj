<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.2</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <Description></Description>
    <Copyright></Copyright>
    <PackageProjectUrl></PackageProjectUrl>
    <Company></Company>
    <Version></Version>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AutoMapper" Version="8.1.1" />
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="6.1.1" />
    <PackageReference Include="FluentValidation.AspNetCore" Version="8.4.0" />
    <PackageReference Include="IdentityServer4" Version="2.5.2" />
    <PackageReference Include="IdentityServer4.AccessTokenValidation" Version="2.7.0" />
    <PackageReference Include="IdentityServer4.AspNetIdentity" Version="2.5.2" />
    <PackageReference Include="MailKit" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.Identity" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.2.0" PrivateAssets="All" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="2.2.6" />
    <PackageReference Include="Serilog.Extensions.Logging.File" Version="2.0.0-dev-00024" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="4.0.1" />
  </ItemGroup>
  <ItemGroup>
    <Compile Remove="ClientApp\dist\**" />
    <Compile Remove="Logs\**" />
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="ClientApp\dist\**" />
    <Content Remove="Logs\**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Remove="ClientApp\dist\**" />
    <EmbeddedResource Remove="Logs\**" />
    <None Remove="ClientApp\dist\**" />
    <None Remove="Logs\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\app\models\ChartItem.ts" />
    <None Remove="ClientApp\src\app\models\DeleteUser.ts" />
    <None Remove="ClientApp\src\app\models\Login.ts" />
    <None Remove="ClientApp\src\app\models\LoginResponse.ts" />
    <None Remove="ClientApp\src\app\models\Registration.ts" />
    <None Remove="ClientApp\src\app\models\User.ts" />
    <None Remove="ClientApp\src\app\pipes\fullname.pipe.ts" />
    <None Remove="ClientApp\src\app\services\managerguard.service.ts" />
    <None Remove="ClientApp\src\app\services\userguard.service.ts" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ClientApp\src\app\directives\" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Angular8Template.Database\Angular8Template.Database.csproj" />
    <ProjectReference Include="..\Angular8Template.Models\Angular8Template.Models.csproj" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\app\models\Login.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\models\DeleteUser.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\models\Registration.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\LoginResponse.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\models\ChartItem.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\models\User.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\pipes\fullname.pipe.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\userguard.service.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\services\managerguard.service.ts" />
  </ItemGroup>

  <ItemGroup>
    <None Update="ClientApp\src\app\components\crypto.component.html">
      <CopyToOutputDirectory></CopyToOutputDirectory>
    </None>
    <None Update="ClientApp\src\app\components\pm.component.html">
      <CopyToOutputDirectory></CopyToOutputDirectory>
    </None>
    <None Update="ClientApp\src\app\components\asx.component.html">
      <CopyToOutputDirectory></CopyToOutputDirectory>
    </None>
    <None Update="ClientApp\src\app\components\profile.component.html">
      <CopyToOutputDirectory></CopyToOutputDirectory>
    </None>
    <None Update="ClientApp\src\app\components\edituser.component.html">
      <CopyToOutputDirectory></CopyToOutputDirectory>
    </None>
    <None Update="ClientApp\src\app\components\wish.component.html">
      <CopyToOutputDirectory></CopyToOutputDirectory>
    </None>
    <None Update="ClientApp\src\app\components\users.component.html">
      <CopyToOutputDirectory></CopyToOutputDirectory>
    </None>
    <None Update="ClientApp\src\app\components\home.component.html">
      <CopyToOutputDirectory></CopyToOutputDirectory>
    </None>
    <None Update="ClientApp\src\app\components\menus\nav.component.html">
      <CopyToOutputDirectory></CopyToOutputDirectory>
    </None>
    <None Update="ClientApp\src\app\components\modals\registration.component.html">
      <CopyToOutputDirectory></CopyToOutputDirectory>
    </None>
    <None Update="ClientApp\src\app\components\modals\signin.component.html">
      <CopyToOutputDirectory></CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>